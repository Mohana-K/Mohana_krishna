Given an integer N, find the number of divisors of N that are divisible by 3.
 

Example 1:

Input : 6
Output: 2
Explanation: 1, 2, 3, 6 are divisors 
of 6 out of which 3 and 6 are divisible 
by 3.

Expected Time Complexity: O(sqrt(N))
Expected Space Complexity: O(1)
 

Constraints:
1 <= N <= 105


code1:(time limit error)
class Solution
{
	public:
		int count_divisors(int n)
		{
		    //Code here.
		int i,count=0;
        for(i=1;i<=n;i++){
            if(n%i==0 && i%3==0){
                 count=count+1;
            }
        }
        return count;
		}
};


code2:
class Solution
{
	public:
		int count_divisors(int n)
		{
			int cnt = 0;
			for ( int i = 1; i*i <= n; i++)
			{
				//find divisors
				if(n % i == 0)
				{
					if(i == n/i)
					{
						// if divisile by 3 increase ans by 1
						if(i % 3 ==0)
							cnt++;
					}
					else
					{
						// if divisile by 3 increase ans by 1
						if(i % 3 == 0)
							cnt++;
						// if divisile by 3 increase ans by 1
						if((n / i) % 3 == 0)
							cnt++;
					}
				}
			}
			returnÂ cnt;
                 }
};